security:
  encoders:
    App\Entity\User:
      algorithm: auto

  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    login:
      pattern: ^/api/login
      stateless: true
      anonymous: true
      json_login:
        check_path: /api/login_check
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
    refresh:
      pattern: ^/api/refresh_token
      stateless: true
      anonymous: true
    register:
      pattern: ^/api/register
      stateless: true
      anonymous: true
    reset_password:
      pattern: ^/api/reset-password
      stateless: true
      anonymous: true
    change_password:
      pattern: ^/api/change-password
      stateless: true
      anonymous: true
    check_token:
      pattern: ^/api/check-token
      stateless: true
      anonymous: true
    public_recipes:
      pattern: ^/api/public/recipes/
      stateless: true
      anonymous: true
    facebook:
      pattern: ^/api/facebook
      stateless: true
      anonymous: true
    photos:
      pattern: ^/api/recipes/\d+/photos/\d+/(small|medium|original)
      stateless: true
      anonymous: lazy
      guard:
        authenticators:
          - lexik_jwt_authentication.jwt_token_authenticator
    oza:
      pattern: ^/api/oza/supplies
      stateless: true
      anonymous: true
      guard:
        authenticators:
          - App\Security\ApiAuthenticator
    api:
      pattern: ^/api
      stateless: true
      guard:
        authenticators:
          - lexik_jwt_authentication.jwt_token_authenticator
    main:
      anonymous: true
      lazy: true
      provider: app_user_provider

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/api/reset-password, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/change-password, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/check-token, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/refresh_token, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/facebook/redirect, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/facebook/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/public/recipes, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/recipes/\d+/photos/\d+/(small|medium|original), roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
    # - { path: ^/profile, roles: ROLE_USER }
